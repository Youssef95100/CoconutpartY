#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define MIN_SIZE 5  // taille minimale de la carte
#define MAX_SIZE 15 // taille maximale de la carte

void Initialiser_Terrain(char *Terrain, int longueur, int largeur) {
    for (int i = 0; i < longueur; i++) {
        for (int j = 0; j < largeur; j++) {
            Terrain[i * largeur + j] = '.';
        }
    }
}

void Generer(char *Terrain, int longueur, int largeur) {
    int i = 0, j = 0;
    Terrain[i * largeur + j] = 'S'; // Start

    while (i < longueur - 1 || j < largeur - 1) {
        int direction = rand() % 2; // 0 = droite, 1 = bas

        if (direction == 0 && j < largeur - 1)
            j++;
        else if (i < longueur - 1)
            i++;

        if (i == longueur - 1 && j == largeur - 1)
            Terrain[i * largeur + j] = 'E'; // (c'est la fin)
        else
            Terrain[i * largeur + j] = 'P'; // (c'est le chemin)
    }
}

void afficher_Terrain(char *Terrain, int longueur, int largeur) {
    for (int i = 0; i < longueur; i++) {
        for (int j = 0; j < largeur; j++) {
            printf("%c ", Terrain[i * largeur + j]);
        }
        printf("\n");
    }
}

int main() {
    srand((unsigned int)time(NULL)); // Initialiser l'aléatoire

    int longueur = MIN_SIZE + rand() % (MAX_SIZE - MIN_SIZE + 1);
    int largeur = MIN_SIZE + rand() % (MAX_SIZE - MIN_SIZE + 1);

    printf("La taille de la map Generer: %d longueur x %d largeur\n\n", longueur, largeur);

    // Créer dynamiquement un tableau 1D
    char *Terrain = malloc(longueur * largeur * sizeof(char));
    if (Terrain == NULL) {
        printf("Erreur d'allocation mémoire\n");
        return 1;
    }

    Initialiser_Terrain(Terrain, longueur, largeur);
    Generer(Terrain, longueur, largeur);
    afficher_Terrain(Terrain, longueur, largeur);

    free(Terrain); // Libérer la mémoire

    return 0;
}
